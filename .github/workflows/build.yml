# This is a basic workflow to help you get started with Actions

name: Build server and ui images

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  delete_old_versions:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/delete-package-versions@v1
        with:
          package-name: 'amaranta_candles_server'
          num-old-versions-to-delete: 50
      - uses: actions/delete-package-versions@v1
        with:
          package-name: 'amaranta_candles_ui'
          num-old-versions-to-delete: 50

  remove_old_artifacts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        age: '1 second'
        skip-tags: true
    needs:
     [delete_old_versions]

  build_server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build and publish amaranta_candles_server to Github Packages
      uses: docker/build-push-action@master
      with:
        repository: banool/amaranta_candles/amaranta_candles_server
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        dockerfile: Dockerfile_server
        tags: latest
        # build_args: "--no-cache --force-rm"
        # always_pull true
    needs:
      [remove_old_artifacts, delete_old_versions]
    
  build_ui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build and publish amaranta_candles_ui to Github Packages
      uses: docker/build-push-action@master
      with:
        repository: banool/amaranta_candles/amaranta_candles_ui
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        dockerfile: Dockerfile_ui
        tags: latest
        # build_args: "--no-cache --force-rm"
        # always_pull: true
    needs:
      [remove_old_artifacts, delete_old_versions]
